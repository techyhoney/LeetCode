class Solution {
public:
    string reformat(string s) {
        
        vector <char> alpha;
        vector <char> digits;
        string result="";
        
        for(int i=0;i<s.length();i++)
        {
            if(isdigit(s[i]))
                digits.push_back(s[i]);
            
            else
                alpha.push_back(s[i]);
        }
        
    
    if(abs(static_cast<int>(digits.size() - alpha.size()))<=1)    
            {
                  if(digits.size()>alpha.size())
                  {
                      result += digits.back();
                      digits.pop_back();
                  }
        
            if(digits.size()<alpha.size())
                   {   
                         result += alpha.back();
                         alpha.pop_back();
                   }
            
                           while(!digits.empty() || !alpha.empty())
                           {
                               if(result.empty() || isdigit(result.back()))
                               {
                                   result=result+alpha.back();
                                    alpha.pop_back();
                               }
                               
                               else
                               {
                                   result=result+digits.back();
                                       digits.pop_back();
                               }
                           }
        
        return result;
            }
        
        else
            return "";
        
        
    }
};
